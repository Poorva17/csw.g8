pipeline {
    agent {
        label 'master'
    }

    options {
        timeout(time: 2, unit: 'HOURS') 
        timestamps()
    }

    stages {

        stage('Checkout') {
            steps {
                git 'git@github.com:tmtsoftware/csw.g8.git'
            }
        }

        stage('Giter8 Compile') { // These tests cover the scenario of multiple components in multiple containers on different machines.
            steps {
                sh "cd /tmp && rm -rf galil && sbt new https://github.com/tmtsoftware/csw.g8 --name=galil --csw_version=$VERSION && cd galil && sbt clean compile"
            }
        }

        stage('Git Tag') {
            steps {
                sh "git tag v$VERSION"
                sh "git push origin v$VERSION"
            }
        }
    }
    post {
        always {
            script {
                sendNotification(currentBuild.result)
            }
        }
    }
}

def sendNotification(String buildStatus = 'STARTED') {
    buildStatus = buildStatus ?: 'SUCCESS'

    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
    def details = '${JELLY_SCRIPT,template="html"}'

    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
        emailext(
                subject: subject,
                body: details,
                to: "tmt-csw@thoughtworks.com"
        )
    }

    slackSend(channel: "#csw-prod-release", color: colorCode, message: summary)
}
